#!/bin/bash

run_pylint() {
    # Runs pylint on the input list of files
    # based on the configured settings in git
    VER_REC="2.3.1"
    CONF_VAL=`git config --get hooks.pylint`

    if [ $? != 0 ]; then
        echo "WARNING: hooks.pylint not defined in your git config settings."
        CONF_VAL="never"
    fi

    # If we aren't going to run pylint, don't bother checking for it.
    if [ "$CONF_VAL" == "never" ]; then
        return 0
    fi

    # Make sure pylint is in our path
    PYL=`which pylint`
    if [ "$PYL" == "" ]; then
        if [ "$CONF_VAL" == "relaxed"]; then
            echo "No pylint found in your path. Skipping pylint."
            return 0
        elif [ "$CONF_VAL" == "strict" ]; then
            echo "No pylint found in your path. This will prevent a commit because hooks.pylint = strict"
            exit 1
        fi
    fi

    # Check the version of pylint
    PYL_VER=`pylint --version | grep pylint | awk '{print $2}'`
    if [ "$PYL_VER" != "$VER_REC" ]; then
        echo "WARNING: Your pylint version (${PYL_VER}) differs from the recommended version (${VER_REC})"
    fi

    if [ "$CONF_VAL" == "relaxed" ]; then
        pylint -rn -sn $1
    elif [ "$CONF_VAL" == "strict" ]; then
        pylint -rn -sn $1
        if [ $? != 0 ]; then
            echo "ERROR: This commit will not be created until you remedy the issues identified by pylint."
            exit 1
        fi
    fi
    return 0
}

run_autopep8() {
    VER_REC="1.4.4"
    CONF_VAL=`git config --get hooks.autopep8`

    if [ $? != 0 ]; then
        echo "WARNING: hooks.autopep8 not defined in your git config settings."
        CONF_VAL="never"
    fi

    # If we aren't going to run autopep8, skip the checks
    if [ "$CONF_VAL" == "never" ]; then
        return 0
    fi

    # Ensure autopep8 is in our path
    AP8=`which autopep8`
    if [ "$AP8" == "" ]; then
        if [ "$CONF_VAL" == "always" ]; then
            echo "No autopep8 found in your path. This will prevent a commit because hooks.autopep8 = always"
            exit 1
        fi
    fi

    AP8_VER=`autopep8 --version | awk '{print $2}'`
    if [ "$AP8_VER" != "$VER_REC" ]; then
        echo "WARNING: Your autopep8 version (${AP8_VER}) differs from the recommended version (${VER_REC})"
    fi

    if [ "$CONF_VAL" == "always" ]; then
        autopep8 --in-place --aggressive --aggressive $1
    fi

    return 0
}

# Get modified files list, but limit it to only python files
FILES=`git status --short -uno *.py **/*.py | awk '{print $2}'`

if [ "${FILES}" == "" ]; then
    exit 0
fi

run_autopep8 "$FILES"
run_pylint "$FILES"
